"use strict";
class Memoria{
    constructor(){
        this.hasFlippedCard = false;
        this.lockBoard = false;
        this.firstCard = null;
        this.secondCard = null;
        this.elements = [
            {
                "element":"HTML5",
                "source":"https://upload.wikimedia.org/wikipedia/commons/3/38/HTML5_Badge.svg"
            },
            {
                "element":"CSS3",
                "source":"https://upload.wikimedia.org/wikipedia/commons/6/62/CSS3_logo.svg"
            },
            {
                "element":"JS",
                "source":"https://upload.wikimedia.org/wikipedia/commons/b/ba/Javascript_badge.svg"
            },
            {
                "element":"PHP",
                "source":"https://upload.wikimedia.org/wikipedia/commons/2/27/PHP-logo.svg"
            },
            {
                "element":"SVG",
                "source":"https://upload.wikimedia.org/wikipedia/commons/4/4f/SVG_Logo.svg"
            },
            {
                "element":"W3C",
                "source":"https://upload.wikimedia.org/wikipedia/commons/5/5e/W3C_icon.svg"
            },
            {
                "element":"HTML5",
                "source":"https://upload.wikimedia.org/wikipedia/commons/3/38/HTML5_Badge.svg"
            },
            {
                "element":"CSS3",
                "source":"https://upload.wikimedia.org/wikipedia/commons/6/62/CSS3_logo.svg"
            },
            {
                "element":"JS",
                "source":"https://upload.wikimedia.org/wikipedia/commons/b/ba/Javascript_badge.svg"
            },
            {
                "element":"PHP",
                "source":"https://upload.wikimedia.org/wikipedia/commons/2/27/PHP-logo.svg"
            },
            {
                "element":"SVG",
                "source":"https://upload.wikimedia.org/wikipedia/commons/4/4f/SVG_Logo.svg"
            },
            {
                "element":"W3C",
                "source":"https://upload.wikimedia.org/wikipedia/commons/5/5e/W3C_icon.svg"
            }
        ];
        this.shuffleElements();
        this.createElements();
        this.addEventListeners();
    }

    shuffleElements(){
        this.elements.sort(()=> Math.random() - 0.5)
    }
    unflipCards(){
        this.lockBoard=true;
          setTimeout(() => {
            this.firstCard.setAttribute("data-state","oculto");
            this.secondCard.setAttribute("data-state","oculto");
            this.resetBoard();
          }, 2000);

    }
    resetBoard(){
        this.hasFlippedCard = false;
        this.lockBoard = false;
        this.firstCard = null;
        this.secondCard = null;
    }

    checkForMatch(){
        if(this.firstCard.getAttribute("data-element")==this.secondCard.getAttribute("data-element")){
            this.disableCards();
        }
        else{
            this.unflipCards();
        }

    }

    disableCards(){
        this.firstCard.setAttribute("data-state","revealed");
        this.secondCard.setAttribute("data-state","revealed");
        this.resetBoard();
    }

    createElements(){
        for(var elemento of this.elements){
            document.write(
                "<article data-state = oculto data-element = "+elemento.element+">"+
                    "<h3>Tarjeta de memoria</h3>"+
                    "<img src = "+elemento.source+" alt = "+elemento.element+"/>"+
                "</article>"
            );
        }
        
    }

    addEventListeners(){
        var cartas = document.querySelectorAll("article");
        for(var carta of cartas){
            carta.addEventListener("click",this.flipCard.bind(carta,this))
        };
    }

  flipCard(game){
    if(this.getAttribute("data-state")=="revealed" || game.lockBoard==true || this == game.firstCard){
        return;
    }
    else{
        this.setAttribute("data-state","flip");
        if(game.hasFlippedCard==false){
            game.hasFlippedCard=true;
            game.firstCard=this;
        }
        else{
            game.secondCard=this;
            game.checkForMatch();
        }

    }
  }
  


}


