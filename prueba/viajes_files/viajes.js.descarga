"use strict";
class Viajes{
    
    constructor(){
        this.imagenActual=3;
    }

    async iniciar() {
        try {
            await this.obtenerGeolocalizacion();
            this.getMapaEstatico();
            this.getMapaDinamico();
            this.crearBoton();
            //<p><input type="file" id="archivoTexto" onchange="noticias.readInputFile(this.files);"></p>
        } catch (error) {
            console.error("Error al obtener la geolocalización:", error);
        }
    }

    crearBoton(){
        var section = document.createElement("article");
        var h2 = document.createElement("h2");
        $(h2).text("Botones: ");
        $(section).append(h2);
        var p = document.createElement("label");
        $(p).text("XML:");
        var i = document.createElement("input");
        $(p).attr("for","archivoTexto");
        $(i).attr("type","file");
        $(i).attr("id","archivoTexto");
        $(i).attr("onchange","v.leerXML(this.files);");
        $(section).append(p);
        $(section).append(i);
        var p1 = document.createElement("label");
        $(p1).text("KML:");
        var i1 = document.createElement("input");
        $(p1).attr("for","archivoKML");
        $(i1).attr("type","file");
        $(i1).attr("id","archivoKML");
        $(i1).attr("onchange","v.leerKML(this.files);");
        $(i1).attr("multiple","");
        $(section).append(p1);
        $(section).append(i1);
        var p2 = document.createElement("label");
        $(p2).text("SVG:");
        var i2 = document.createElement("input");
        $(p2).attr("for","archivoSVG");
        $(i2).attr("type","file");
        $(i2).attr("id","archivoSVG");
        $(i2).attr("onchange","v.leerSVG(this.files);");
        $(i2).attr("multiple","");
        $(section).append(p2);
        $(section).append(i2);
        $("body").append(section);
    }

    obtenerGeolocalizacion() {
        return new Promise((resolve, reject) => {
            navigator.geolocation.getCurrentPosition(
                posicion => {
                    this.getPosicion(posicion);
                    resolve();
                },
                error => {
                    this.verErrores(error);
                    reject(error);
                }
            );
        });
    }
    getPosicion(posicion){
        this.mensaje = "Se ha realizado correctamente la petición de geolocalización";
        this.longitud         = posicion.coords.longitude; 
        this.latitud          = posicion.coords.latitude;  
        this.precision        = posicion.coords.accuracy;
        this.altitud          = posicion.coords.altitude;
        this.precisionAltitud = posicion.coords.altitudeAccuracy;
        this.rumbo            = posicion.coords.heading;
        this.velocidad        = posicion.coords.speed;       
    }
    verErrores(error){
        switch(error.code) {
        case error.PERMISSION_DENIED:
            this.mensaje = "El usuario no permite la petición de geolocalización"
            break;
        case error.POSITION_UNAVAILABLE:
            this.mensaje = "Información de geolocalización no disponible"
            break;
        case error.TIMEOUT:
            this.mensaje = "La petición de geolocalización ha caducado"
            break;
        case error.UNKNOWN_ERROR:
            this.mensaje = "Se ha producido un error desconocido"
            break;
        }
    }

    getMapaEstatico(){
        var h2 = document.createElement("h2");
        $(h2).text("Mapa estático: ");
        $("body").append(h2);
        var url = "https://api.mapbox.com/styles/v1/";
        var style = "mapbox/";
        var statico = "streets-v12/";
        var overlay = "static/";
        var lon=this.longitud+",";
        var lat=this.latitud+",";
        var zoom="15/";
        var tamaño ="400x400?";
        var apiKey = "access_token=pk.eyJ1IjoidW8yODg1MjQiLCJhIjoiY2xwbzFqbG51MG84cTJpcW5iajVkOWQ4OCJ9.KhtzMt_TZjpAdAcFdozVdg";
        var imagenMapa = url+style+statico+overlay+lon+lat+zoom+tamaño+apiKey;
        var imagen = document.createElement("img");
        $(imagen).attr("src",imagenMapa);
        $(imagen).attr("alt","Mapa estático");
        $("body").append(imagen);
    }

    getMapaDinamico(){
        var h2 = document.createElement("h2");
        $(h2).text("Mapa dinámico: ");
        $("body").append(h2);
        var section = document.createElement("article");
        $(section).attr("id","mapa");
        var h2 = document.createElement("h2");
        $(h2).text("Mapa dinámico: ");
        $(section).append(h2);
        $("body").append(section);
        mapboxgl.accessToken = 'pk.eyJ1IjoidW8yODg1MjQiLCJhIjoiY2xwbzFqbG51MG84cTJpcW5iajVkOWQ4OCJ9.KhtzMt_TZjpAdAcFdozVdg';
        const map = new mapboxgl.Map({
            container: 'mapa', // container ID
            style: 'mapbox://styles/mapbox/streets-v12', // style URL
            center: [this.longitud, this.latitud], // starting position [lng, lat]
          zoom: 15 // starting zoom
        });
    }

    leerXML(files){
        var archivo = files[0];
        var lector = new FileReader();
        lector.onload = function (evento) {
            var xml = lector.result;
            var section = document.createElement("article");
            var h2 = document.createElement("h2");
            $(h2).text("Rutas: ");
            $(section).append(h2);
            $(section).attr("data-state","xml");
            $.each($("ruta",xml),function(i,ruta){
                var div = document.createElement("section");
                $(div).attr("data-info","ruta"+i);
                $(div).attr("data-state","xml");
                var nombre = document.createElement("h3");
                $(nombre).text($("nombreRuta",ruta).text())
                var descripcion = document.createElement("p");
                $(descripcion).text("Descripción: "+$("descripcionRuta",ruta).text());
                var fechaIni = document.createElement("p");
                $(fechaIni).text("Fecha de inicio: "+$(ruta,xml).attr("fechaInicio"));
                var lugarIni = document.createElement("p");
                $(lugarIni).text("Lugar de inicio: "+$("direccionInicioRuta",ruta).text()+","+$("lugarInicioRuta",ruta).text());
                var valoracion = document.createElement("p");
                $(valoracion).text("Valoración: "+$("recomendacionRuta",ruta).text());
                var hitos= document.createElement("p");
                $(hitos).text("Hitos de la ruta: ");
                $(div).append(nombre);
                $(div).append(descripcion);
                $(div).append(fechaIni);
                $(div).append(lugarIni);
                $(div).append(hitos);
                var lista = document.createElement("ul");
                $.each($("hito",ruta),function(i,hito){
                    var infoHito = document.createElement("li");
                    $(infoHito).text($("nombreHito",hito).text()+": "+$("descripcionHito",hito).text());
                    $(lista).append(infoHito);

                })
                $(div).append(lista);
                $(div).append(valoracion);
                $(section).append(div);
            })
            $("body").append(section);
        }
        lector.readAsText(archivo);
    }

    async leerKML(files){
        for (var i = 0; i < files.length; i++) {
            var div = document.createElement("section");
            var h3 = document.createElement("h3");
            $(h3).text("KML");
            $(div).append(h3);
            var divg = $("section[data-info=ruta"+i+"]");
            var h4 = document.createElement("h4");
            $(h4).text("KML");
            $(divg).append(h4);
            $(div).attr("data-state","mapa");
            $(div).attr("id","map"+i);
            $(divg).append(div);
            var archivo = files[i];
            try {
                var kml = await this.leerArchivo(archivo);
                var coordenadas = $("coordinates",kml).text().split("\n");
                await this.dibujarMapa(coordenadas,i);
               
                
            } catch (error) {
                console.error(`Error al leer el archivo ${archivo.name}: ${error.message}`);
            }
        }
}

dibujarMapa(coordenadas,i){
    return new Promise((resolve, reject) => {
        var coord0 = coordenadas[1].split(",");
        var coord1 = coordenadas[2].split(",");
        var coord2 = coordenadas[3].split(",");
        var coord3 = coordenadas[4].split(",");
        mapboxgl.accessToken = 'pk.eyJ1IjoidW8yODg1MjQiLCJhIjoiY2xwbzFqbG51MG84cTJpcW5iajVkOWQ4OCJ9.KhtzMt_TZjpAdAcFdozVdg';
    const map = new mapboxgl.Map({
    container: 'map'+i,
    // Choose from Mapbox's core styles, or make your own style with Mapbox Studio
    style: 'mapbox://styles/mapbox/streets-v12',
    center: [coord0[0], coord0[1]],
    zoom: 5
    });
    
    map.on('load', () => {
    map.addSource('route', {
    'type': 'geojson',
    'data': {
    'type': 'Feature',
    'properties': {},
    'geometry': {
    'type': 'LineString',
    'coordinates': [
    [coord0[0], coord0[1]],
    [coord1[0], coord1[1]],
    [coord2[0], coord2[1]],
    [coord3[0], coord3[1]]
    ]
    }
    }
    });
    map.addLayer({
    'id': 'route',
    'type': 'line',
    'source': 'route',
    'layout': {
    'line-join': 'round',
    'line-cap': 'round'
    },
    'paint': {
    'line-color': '#FF0000',
    'line-width': 8
    }
    });
    });
    resolve();
        
       
    });
}

async leerSVG(files) {
    for (var i = 0; i < files.length; i++) {
        var archivo = files[i];
        var divg = $("section[data-info=ruta"+i+"]")
        try {
            var section = $("<section>");
            var svg = await this.leerArchivo(archivo);
            
            var h4 = document.createElement("h4");
            $(h4).text("SVG");
            
            
            $(section).append(h4);
            $(section).append(svg);
            $(divg).append(section);
           
            
        } catch (error) {
            console.error(`Error al leer el archivo ${archivo.name}: ${error.message}`);
        }
    }
}

 leerArchivo(archivo) {
    return new Promise((resolve, reject) => {
        var lector = new FileReader();

        lector.onload = function (evento) {
            var contenido = evento.target.result;
            resolve(contenido);
        };

        

        lector.readAsText(archivo);
    });
}

siguiente(){
    var imagenes = $('img[data-info="carrusel"]');
    var maximo = imagenes.length-1;
    if(this.imagenActual==maximo){
        this.imagenActual=0;
    }else{
        this.imagenActual++;
    }
    var imgAct = this.imagenActual
    $.each(imagenes, function(i,imagen){
        var trans = 100 * (i - imgAct);
    $(imagen).css('transform', 'translateX(' + trans + '%)')
    });
}

anterior(){
    var imagenes = $('img[data-info="carrusel"]');
    var maximo = imagenes.length-1;
    if(this.imagenActual==0){
        this.imagenActual=maximo;
    }else{
        this.imagenActual--;
    }
    var imgAct = this.imagenActual
    $.each(imagenes, function(i,imagen){
        var trans = 100 * (i - imgAct);
    $(imagen).css('transform', 'translateX(' + trans + '%)')
    });
}


}


var v = new Viajes();

